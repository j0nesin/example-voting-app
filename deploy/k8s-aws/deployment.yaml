# add secrets handling for db un/pw

apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:    
      containers:
      - name: postgres
        image: postgres:9.4
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 5432
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
#        volumeMounts:
#        - mountPath: /var/lib/postgresql/data/pgdata
#          name: pgdata
#      volumes:
#      - name: pgdata
#        gcePersistentDisk:
#          pdName: voting-appp-db-data
#          fsType: ext4
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: vote
  labels:
    app: vote
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: vote
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: vote
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: vote
    spec:
      imagePullSecrets:
      - name: us-east-1-ecr-registry
      containers:
      - name: vote
        image: <REGISTRY>/examplevotingapp_vote:<IMAGE_TAG>
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          timeoutSeconds: 2
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: worker
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: worker
    spec:
      imagePullSecrets:
      - name: us-east-1-ecr-registry
      containers:
      - name: worker
        image: <REGISTRY>/examplevotingapp_worker:<IMAGE_TAG>
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: result
  labels:
    app: result
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: result
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: result
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: result
    spec:
      imagePullSecrets:
      - name: us-east-1-ecr-registry
      containers:
      - name: result
        image: <REGISTRY>/examplevotingapp_result:<IMAGE_TAG>
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          timeoutSeconds: 2
